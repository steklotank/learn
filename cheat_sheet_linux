##HOST Manipulating##
rename host
hostnamectl set-hostname NAME


##DOC Manipulatig##
apropos - for search in all man pages
apropos -s  1,8 director for search only in 1 and 8 sections
sudo mandb - for upgrade apropos
mandb - for refresh apropos
man man (use number of section for particulary page)

##SSH manipulating##
copy ssh key to remote host with specific user
ssh-copy-id -i ~/.ssh/id_rsa.pub 'user@domain'@10.0.1.1


## File manipulating##
Copy with permissions
cp -p test.txt ./test_copy.txt
create directory with parent directory 
mkdir -p /tmp/1/2/3/4/5/6/7/8/9
show ls with full time 
ls --full-time
#cat EOF
HOW TO EOF in example.txt
 cat  <<EOF >example.txt
> abracadabrA
> EOF


## Permissions manipulating ##
#Change group permisson to file
chgrp wheel exapmle.txt 
#Change file user permission
sudo chown sk example.txt
#change with group
sudo chown sk:wheel example.txt
#Order for all permission
first check User > Groups > Other
!if user doest have rights to manage file
but hes group does, he will refused,
because users right does not applyble 
#Chmod base
chmod  ugo(user\group other) +-(add or remove permission) rwx(read write execute) filname
or
chomd u=rwx filname
or
chmod 777(ugo) filname
1 - execute
2 - write
4 - read
7 = 1+4+2 read write execute
5 = 4+1 read and execute
6 = 4+2 read and write
3? = execute+write (not read!)
how theese numbers calculated
r--|-w-|--x
100|010|001 biary>decimal 421

0644 - 0 special bit equals 1,2 or 4
stickyBit (+t) - 1 запрещает пользователям удалять файлы других пользователей
SGID -(g+s) 2  для файла разрешает выполнять файл с разрешениями группы. 
для группы файлы созданные в каталоге получают одного и того же владельца группы
SUID - (u+s) -4 Пользователь выполняет файл с разрешением владельца файла

## File searching with find ##
#find directory in current directory
 find . -type d -name "foo_bar"
#find files in root folder
 find / -type f -name "foo_bar"
#find case isensetive 
find / -iname "foobar"
#find inside files
zgrep -i 'bla_bla' /var/logs/*
grep -rnw '/var/logs/' -e '27e6380d5'
#grep all link strings
 grep -Eo "(http|https)://[a-zA-Z0-9./?=_%:-]*"
#find all files specific size
find /lib64/ -size +10M
10c = 10bytes\ 10k=10Kbytes\ 10M= 10Mb\ 10G = 10Gb
-size 512k -search exact 512Kb
-size +512k -searchs all grader than 512K
-size -512k - search all less 512k
#find operators
And operator
find -size 10M -name "f*" # finds files size 10M and name starts with f
Or operator 
find -size 10M -o -name "f*" fins 10M size or name starts with f
Not operator
find -not -name "f*" #or find \! -name "f*"
#find and delete lot of file with mask
find /var/logs -name "*2022-08*" -delete 
#find all files wich modified 1 min ago
find /dev/ -mmin -5
mmin 5 = modied just 5 minues ago
mmin -5 = modified all before 5 miutes ago
mmin +5 = 5+ -5 5 min ago + all during 5 min
#find and delete files older than 5 days ago
find . -mtime +5 -delete
mitme 2 - 2 days ago
#!!!modified - change content != changed changed metadate (file permission)
find / -cmin -5 change 5 min ago
#find with permisson
find -perm 664  # find exact 664 permission not 777 or 544
find -perm -644 # finds at least 644 permission includes 777
find -perm /644 # finds files with any permission it finds 777 and 544
find -perm u=rwx, g=rw, o=r
find . -perm -444 -perm /222 ! -perm /111
find . -perm -a+r -perm /a+w ! -perm /a+x
#example find any file group can write and others cannot read or write
sudo find /var/log/ -perm /g+w ! -perm /o+rw
#Find our secret file under /home/bob. You can either look for a file that is exactly 213 kilobytes or a file that has permission 402 in octal
find -size 213k -o -perm 402
#find and exec
find in local dir and copy to another
find /home/bob/ -name "cats.txt" -exec cp "{}" /opt  \;


##Command line manipulating##
ctrl+r reverse search in history
watch -n 5 date -run date every 5 seconds

## GIT Manipulating ##
#git hard reset to commit, find hash of commit
git history 
#reset to comit
git reset --hard <commit_hash>
#list all avalible repositories in bit bucket
 curl -k --user <username>:<password> -X GET https://bitbucket.repo.com/rest/api/1.0/projects/PROJ_NAM/repos?limit=100 | grep -Eo "(http|https)://[a-zA-Z0-9./?=_%:-]*.git"
#Get changes from master into your branch
git checkout my_feature_branch
git rebase master



##Debugging tools##
top htop - for proccessing info
itop - for disk usage

show cpu
lscpu nproc

show file openned by proccess
lsof -p <PID>

strace <command> - tracing syscall etc.


------------------------------------------------------------


## Text manipulating##
get md5 hash of pass
 echo "p@ssword" | md5sum | cut -d' ' -f1

tail -n 20 #show last 20 strings
tail -f follow 
head #opposit of taitl

wc - word count
wc -w -count lines

#sed
sed 's/canda/canada/g' user_info.txt #this will find all canda and replace to canada in dry-run
    s-substitute 
    g-global (withowt it will just replace first)
sed -i 's/canda/canada/g' user_info.txt # -i means directly in file

I - capital I for case isensetive. On the end like /Ig

sed -i '500,2000s/enabled/disabled/g' values.conf

cut -d ' ' -f 1 user_info.txt  # -d is for delimeter ' '-delimeter -f 1 - first 1 column

#vi
search case isensetive /search\c
:5 - goes to 5th line 
yy -for copy p for past

#grep
 grep key 'pattern' /path/to/file
 -r - recusevly
 -i - case insensetive
 -vi - invert match
 -w -for words
 -o - only match 

#regexp
- ^ search in begin of words
- $ search for the end of word
  . match any character
  \. search only period 
 * - any character any times
 /.*/ -finds all words in bracets
 0* - fins all character even without "0"
 0+ - fnds all zeros
 {min,max}
 0{3,} - shows all strings above 000 so 000 and 00000
 0{,3} - shows at most 3 zeros 00 or zero 
 0{3} - exact 000
 ? - for elamens that may occured
 disabled? - shows disable disabled and disables
 | -for or
 enabled|disabled - show all enabled and disabled words
 []-rage
 [a-z] from a to z
 c[au]t -for find cat and cut
() - subexpression
[^] - exclude from search 
http[^s] - will show only http
regexr.com
egrep -w '[A-Z][a-z]{2}' /etc/nsswitch.conf > /home/bob/filtered1
grep -ic '^SECTION' testfile > /home/bob/count_lines
 force grep to use regular re expression grep -Er
 or use egrep 

#archiving data
#baseline of archiving create tar > compress > send to storage
list archve 
tar --list --file archive.tar
tart -tf archve.tar
#create
tar --create --file archive.tar file1= tar cf archive.tar file1
tar --append --file archive.tar file2 = tar rf archive.tar file2
create from dir sudo tar cfP logs.tar /var/log/
#extract
tar --extract --file arch.tar = tar xf arch.tar
tar --extract --file arch.tar --directory /tmp/ = tar xf acrh -C /tmp/
#compressing
3 pre install utily gzip bzip2 xz
gzip/bzip/xz file1.
for unzip add key
gzip/bzip/xz --decpress file.*
to keep original fiel  add key --keep
#zip command can zip a dir  zip -r 

For creation with tar
tar --create -gzip --file .. = tar czf ..
tar --create -bzip2 --file .. = tar cjf ..
tar --create -xz --file .. = tar cJf ..
tar --create --autocompress --file tarname_with_ext.gz/bz2/xz = tar caf ..

For extract
tar --extract --file .. = tar xf archive.tar.gz /folder

#Backing up
          <local_dir>  <User@remoteaddr:/path/to/sync/>      
rsync -a Pictures/     sk@192.1.1.1:home/sk/Pictures/

#Archiving with DD. Before dd use unmount
        input_file=device output_size
sudo dd if=/dev/sda of=disc_image.raw  bs=1M status=progress
#For unmount use reverse
sudo dd if=disc_image.raw  of=/dev/sda bs=1M status=progress

# Flow control
< stdin
2> stderr
1> stdout

for expample get rid of errors
grep -r '^The' /etc/ 2>/dev/null
grep -r '^The' /etc/ 2>error.log 1>output.log - for override
grep -r '^The' /etc/ 2>>error.log 1>>output.log - for append
grep -r '^The' /etc/ > all output 2>&1 - for compine 1 and 2

sort <<EOF  - inline stream
> 1 
> 3 
> 5 
> 2
# EOF

bc <<<1+2+3+4   -for pass an inline string

column -t - for add  tabulation and purify outputs
sort -duf -sort with case insensetive and clean from dupplicates

#issue a certificate
openssl req -x509 -newkey rsa:2048 -days 365 -keyout myprivate.key -out mycert.crt
# view cert
openssl x509 -in mycert.crt -text

#force restart reboot
systemctl reboot --force --force - instant reboot
systemctl poweroff --force --force -instant power off

shutdown 2:00 - in a AM
shutdown +15 - shutdown after 15 min
shutdown -r - for reboot
#wall message
shudtown -r +15 'Sheduled restart after 15 minuets'
cancel shutdown
shutdown -c 

#Booting 
systemctl get-default
#change target for non graphical
sudo systemctl get-default multi-user.target  
# for backing graphical
sudo systemctl isolate graphical.target
# emergency
sudo systemctl isolate emergency.target
# rootshell
sudo systemctl isolate rescue.target

#Bootloader issue
1)Load liveCD GRUB/
2) procceed with /mnt/sysroot
then chroot /mnt/susroot

grub2-mkconfig - o /boot/grub2/grub.cfg

lsblk
find root mounted device

grub2-install /dev/sda

grub2-install /dev/vda > /home/bob/grub.txt 2>&1
dnf reinstall grub2-efi grub-efi-modules shim

#default grub config
/etc/default/grub 





# slect only uniqe strings in next line
uniq filname.txt 

#sorting 
sort filename.txt

#for select only uniqe enteries we need to pass 
sort filname.txt | qniq


diff -c file1 file2 # for show diff with context

sdiff file1 file2 # for side by side diff


##Add Trusted certificate
#Debian
sudo cp your.crt /usr/local/share/ca-certificates/
sudo update-ca-certificates

#for remove, remove file and
sudo update-ca-certificates --fresh


